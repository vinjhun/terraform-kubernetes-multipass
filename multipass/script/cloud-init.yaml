#cloud-config
bootcmd:
- printf "[Resolve]\nDNS=8.8.8.8" > /etc/systemd/resolved.conf
- [systemctl, restart, systemd-resolved]
- sleep 10
- curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
- echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
- chmod a+r /etc/apt/keyrings/kubernetes-apt-keyring.gpg
users:
  - name: root
    ssh_authorized_keys:
    - ${ssh_public_key}
growpart:
    mode: auto
    devices: ["/"]
manage_etc_hosts: localhost
locale: "en_US.UTF-8"
package_update: true
package_upgrade: true
# apt_update: true
# apt_upgrade: true
packages:
    # if you change kubernetes version...
    - kubeadm=${k_version}
    - kubelet=${k_version}
    - kubectl=${k_version}
    # ...also use a SUPPORTED docker version for it
    - apt-transport-https
    - ntp
    - jq
    - make
write_files:
  - path: /etc/modules
    content: |
      ip_vs
      ip_vs_rr
      ip_vs_wrr
      ip_vs_sh
      nf_conntrack_ipv4
  - path: /etc/syctl.conf
    content: |
      net.ipv4.ip_forward=1
      net.bridge.bridge-nf-call-ip6tables=1
      net.bridge.bridge-nf-call-iptables=1
  - path: /etc/environment
    content: |
      LC_ALL=en_US.UTF-8
      LANG=en_US.UTF-8
      KUBECONFIG=/etc/kubernetes/admin.conf
  - path: /etc/docker/daemon.json
    content: |
        {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
        "max-size": "100m" },
        "storage-driver": "overlay2"
        }
runcmd:
- sysctl -p
- systemctl daemon-reload
- systemctl restart kubelet
#Go installation
- wget https://go.dev/dl/go1.21.3.linux-arm64.tar.gz
- tar -xvf go1.21.3.linux-arm64.tar.gz
- mv go /usr/local/
- export GOPATH=/usr/local/go
- export GOCACHE=$GOPATH/cache
- export PATH=$GOPATH/bin:$PATH
# ...Containerd installation
- curl -LO https://github.com/containerd/containerd/releases/download/v1.7.14/containerd-1.7.14-linux-arm64.tar.gz
- tar Cxzvf /usr/local containerd-1.7.14-linux-arm64.tar.gz
- curl -LO https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
- mkdir -p /usr/local/lib/systemd/system/ && mv containerd.service /usr/local/lib/systemd/system/
- mkdir -p /etc/containerd/
- containerd config default | tee /etc/containerd/config.toml > /dev/null
- sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
- systemctl daemon-reload
- systemctl enable --now containerd
# ...Runc installation
- curl -LO https://github.com/opencontainers/runc/releases/download/v1.1.12/runc.arm64
- install -m 755 runc.arm64 /usr/local/sbin/runc
# ...CNI installation
- curl -LO https://github.com/containernetworking/plugins/releases/download/v1.4.1/cni-plugins-linux-arm64-v1.4.1.tgz
- mkdir -p /opt/cni/bin && tar Cxzvf /opt/cni/bin cni-plugins-linux-arm64-v1.4.1.tgz
# ...Configure crictl with containerd
- crictl config runtime-endpoint unix:///var/run/containerd/containerd.sock
- ${extra_cmd}
- echo ${haproxy_ip} > /tmp/haproxy_ip
- touch /tmp/signal
